{"version":3,"sources":["components/HomePage.tsx","api.ts","components/PersonLink.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","checkingPersonName","motherName","fatherName","slug","name","sex","born","died","hasMotherInList","hasFatherInList","useParams","currentSlug","classNames","to","Loader","PeopleTable","people","isLoading","checkingMotherName","personParentName","find","map","PeoplePage","useState","peopleFromServer","setPeopleFromServer","setIsLoading","isError","setIsError","isNoPeople","setIsNoPeople","useEffect","length","catch","finally","PageNavLink","text","isActive","MainNav","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0781a90a.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  checkingPersonName: (motherName: string | null) => Person | null;\n};\n\nexport const PersonLink: FC<Props> = ({ person, checkingPersonName }) => {\n  const {\n    motherName,\n    fatherName,\n    slug = '',\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n  const hasMotherInList = checkingPersonName(motherName);\n  const hasFatherInList = checkingPersonName(fatherName);\n  const { slug: currentSlug = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': currentSlug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {hasMotherInList ? (\n          <Link to={`/people/${hasMotherInList.slug}`} className=\"has-text-danger\">\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {hasFatherInList ? (\n          <Link to={`/people/${hasFatherInList.slug}`}>{fatherName}</Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { Loader } from './Loader';\n\ntype Props = {\n  people: Person [];\n  isLoading: boolean\n};\n\nexport const PeopleTable: FC<Props> = ({ people, isLoading }) => {\n  const checkingMotherName = (personParentName: string | null) => {\n    return personParentName\n      ? people.find(person => person.name === personParentName) || null\n      : null;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader /> : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.map(person => (\n                  <PersonLink\n                    person={person}\n                    key={person.slug}\n                    checkingPersonName={checkingMotherName}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isNoPeople, setIsNoPeople] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(people => {\n        if (!people.length) {\n          setIsNoPeople(true);\n        }\n\n        setPeopleFromServer(people);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      {!isError && !isNoPeople && (\n        <PeopleTable people={peopleFromServer} isLoading={isLoading} />\n      )}\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {isNoPeople && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string\n};\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const MainNav: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { MainNav } from './components/MainNav';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <main className=\"section\">\n        <MainNav />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route\n              path=\":slug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}